/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import Entidades.Cliente;
import Entidades.Consulta;
import Entidades.Mascota;
import Entidades.Tratamiento;
import Entidades.Visita;
import Vistas.PanelCliente;
import conexion.ClienteData;
import conexion.ConsultaData;
import conexion.MascotaData;
import conexion.TratamientoData;
import conexion.VisitaData;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cristian
 */
public class PanelVisita extends javax.swing.JPanel {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }

    };
    private Mascota mascota = new Mascota();
    private PanelCliente panelCliente;
    JPanel panel = null;
    ArrayList<Tratamiento> listaTratamientos = new ArrayList<>();
    Iterator<Tratamiento> iterator = listaTratamientos.iterator();

    /**
     * Creates new form PanelMascota
     */
    public PanelVisita(JPanel panel) {
        initComponents();
//        datosMascota();
        this.panel = panel;
        cargacombotratamiento();
        armarCabecera();
        cargacomboFormaPago();
    }

    public Mascota getMascota() {
        return mascota;
    }

    public void setMascota(Mascota mascota) {
        this.mascota = mascota;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTCargarpeso = new javax.swing.JTextField();
        jBpesoActual = new javax.swing.JButton();
        jPInternoMascota = new javax.swing.JPanel();
        jLnombre = new javax.swing.JLabel();
        jLEspecie = new javax.swing.JLabel();
        jLRaza = new javax.swing.JLabel();
        jLSexo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTDocumento = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jCMascota = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jBSeleccionar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jTApellido = new javax.swing.JTextField();
        jTDomicilio = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTTelefono = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTContactoAlternativo = new javax.swing.JTextField();
        jBBuscar = new javax.swing.JButton();
        jTNombreMascota = new javax.swing.JTextField();
        jTEspecieMascota = new javax.swing.JTextField();
        jTRasaMascota = new javax.swing.JTextField();
        jTColorMascota = new javax.swing.JTextField();
        jTSexoMascota = new javax.swing.JTextField();
        jTPesoMascota = new javax.swing.JTextField();
        jTFechaNacMascota = new javax.swing.JTextField();
        jTPesoPromedioMascota = new javax.swing.JTextField();
        jBLimpiar = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDetalle = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jComboTratamiento = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jDFechaVisita = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jBFacturar = new javax.swing.JButton();
        jBlimpiarTodo = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jBborrarTratamientoTabla = new javax.swing.JButton();
        jBcargarPrecio = new javax.swing.JButton();
        jBlimpiarTabla = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTCostoTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTValorVisita = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTValorTratamiento = new javax.swing.JTextField();
        jBCargaTratamientos = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jCFormaPAgo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));

        jTCargarpeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTCargarpesoKeyTyped(evt);
            }
        });

        jBpesoActual.setText("peso actual");
        jBpesoActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpesoActualActionPerformed(evt);
            }
        });

        jPInternoMascota.setBackground(new java.awt.Color(51, 153, 255));

        jLnombre.setText("nombre de mascota: ");

        jLEspecie.setText("especie: ");

        jLRaza.setText("raza: ");

        jLSexo.setText("sexo: ");

        jLabel1.setText("peso : ");

        jLabel2.setText("peso promedio: ");

        jLabel3.setText("Fecha nacimiento: ");

        jLabel4.setText("color del pelo : ");

        jLabel11.setText("Documento: ");

        jTDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTDocumentoKeyTyped(evt);
            }
        });

        jLabel12.setText("nombre");

        jLabel13.setText("apellido:");

        jLabel14.setText("domicilio");

        jLabel15.setText("mascotas");

        jBSeleccionar.setText("seleccionar");
        jBSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSeleccionarActionPerformed(evt);
            }
        });

        jTNombre.setEditable(false);

        jTApellido.setEditable(false);

        jTDomicilio.setEditable(false);

        jLabel18.setText("numero de telefono:");

        jTTelefono.setEditable(false);

        jLabel19.setText("contacto alternativo");

        jTContactoAlternativo.setEditable(false);

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jTNombreMascota.setEditable(false);

        jTEspecieMascota.setEditable(false);

        jTRasaMascota.setEditable(false);

        jTColorMascota.setEditable(false);

        jTSexoMascota.setEditable(false);

        jTPesoMascota.setEditable(false);

        jTFechaNacMascota.setEditable(false);

        jTPesoPromedioMascota.setEditable(false);

        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo.png"))); // NOI18N

        javax.swing.GroupLayout jPInternoMascotaLayout = new javax.swing.GroupLayout(jPInternoMascota);
        jPInternoMascota.setLayout(jPInternoMascotaLayout);
        jPInternoMascotaLayout.setHorizontalGroup(
            jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLRaza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addGap(219, 219, 219)
                                        .addComponent(jLabel1))
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                                .addComponent(jTDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jBBuscar))
                                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                                .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(19, 19, 19)
                                .addComponent(jLabel17))
                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addComponent(jLnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInternoMascotaLayout.createSequentialGroup()
                                        .addComponent(jLEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)))
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTNombreMascota)
                                            .addComponent(jTEspecieMascota, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                                        .addGap(33, 33, 33)
                                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTColorMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInternoMascotaLayout.createSequentialGroup()
                                                .addComponent(jLSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTPesoMascota, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                                    .addComponent(jTSexoMascota)))))
                                    .addComponent(jTRasaMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBLimpiar)
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTFechaNacMascota)
                                            .addComponent(jTPesoPromedioMascota, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(186, 186, 186))
                            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel19)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTContactoAlternativo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addComponent(jBSeleccionar)
                                .addGap(12, 12, 12)))
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))))
        );
        jPInternoMascotaLayout.setVerticalGroup(
            jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel11)
                    .addComponent(jBBuscar)
                    .addComponent(jTDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInternoMascotaLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jTContactoAlternativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jCMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBSeleccionar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInternoMascotaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLnombre)
                    .addComponent(jTNombreMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTColorMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFechaNacMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLEspecie)
                    .addComponent(jTEspecieMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTSexoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPesoPromedioMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPInternoMascotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRaza)
                    .addComponent(jLabel1)
                    .addComponent(jTRasaMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPesoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpiar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTDetalle.setColumns(20);
        jTDetalle.setRows(5);
        jScrollPane1.setViewportView(jTDetalle);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Detalle de la consulta");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tratamiento");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de la consulta");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("La Vete de Gaston");

        jBFacturar.setBackground(new java.awt.Color(51, 153, 255));
        jBFacturar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBFacturar.setForeground(new java.awt.Color(255, 255, 255));
        jBFacturar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono patitas.png"))); // NOI18N
        jBFacturar.setText("Facturar");
        jBFacturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFacturarActionPerformed(evt);
            }
        });

        jBlimpiarTodo.setText("Limpiar");
        jBlimpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlimpiarTodoActionPerformed(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(51, 153, 255));
        jBSalir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(255, 255, 255));
        jBSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono patitas.png"))); // NOI18N
        jBSalir.setText("Salir");
        jBSalir.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jBSalir.setBorderPainted(false);
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jTable);

        jBborrarTratamientoTabla.setText("borrar");
        jBborrarTratamientoTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBborrarTratamientoTablaActionPerformed(evt);
            }
        });

        jBcargarPrecio.setText("cargar tratamientos");
        jBcargarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcargarPrecioActionPerformed(evt);
            }
        });

        jBlimpiarTabla.setText("limpiar");
        jBlimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlimpiarTablaActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("COSTO TOTAL: $");

        jTCostoTotal.setEditable(false);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("VALOR VISITA: $");

        jTValorVisita.setText("0");
        jTValorVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTValorVisitaActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("VALOR TRATAMIENTO: $");

        jTValorTratamiento.setEditable(false);
        jTValorTratamiento.setText("0");

        jBCargaTratamientos.setText("cargar");
        jBCargaTratamientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCargaTratamientosActionPerformed(evt);
            }
        });

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono patitas.png"))); // NOI18N

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono patitas.png"))); // NOI18N

        jCFormaPAgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCFormaPAgoActionPerformed(evt);
            }
        });

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Forma de pago");

        jButton2.setText(" sumar ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPInternoMascota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jBlimpiarTodo)
                                            .addComponent(jBpesoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(45, 45, 45)
                                        .addComponent(jTCargarpeso, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(122, 122, 122)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel23)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jBFacturar)
                                                        .addComponent(jCFormaPAgo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jTValorTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(52, 52, 52)
                                                        .addComponent(jTValorVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jTCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton2))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jBCargaTratamientos)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jDFechaVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jBborrarTratamientoTabla)
                        .addGap(55, 55, 55)
                        .addComponent(jBcargarPrecio)
                        .addGap(60, 60, 60)
                        .addComponent(jBlimpiarTabla)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBSalir)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))))
                .addComponent(jPInternoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addComponent(jComboTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBCargaTratamientos))
                    .addComponent(jDFechaVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBborrarTratamientoTabla)
                            .addComponent(jBlimpiarTabla)
                            .addComponent(jBcargarPrecio))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBpesoActual)
                            .addComponent(jTCargarpeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jBlimpiarTodo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTValorVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTValorTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTCostoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCFormaPAgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBFacturar)
                        .addGap(57, 57, 57))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        String dni = jTDocumento.getText();
        jBborrarTratamientoTabla.setEnabled(false);
        jBcargarPrecio.setEnabled(false);
        jBlimpiarTabla.setEnabled(false);
        if (dni.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El documento está vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int documento = Integer.parseInt(dni);
            Cliente clienteEncontrado = ClienteData.buscarClientePorDocumento(documento);

            if (clienteEncontrado != null) {
                ArrayList<Mascota> mascotas = new ArrayList<>();
                mascotas = MascotaData.listarMascotasPorCliente(documento);
                cargarcombo(mascotas);
                jTNombre.setText(clienteEncontrado.getNombre());
                jTApellido.setText(clienteEncontrado.getApellido());
                jTDomicilio.setText(clienteEncontrado.getDireccion());
                jTTelefono.setText(clienteEncontrado.getTelefono());
                jTContactoAlternativo.setText(clienteEncontrado.getPersonaAlternativa());
                listaTratamientos.removeAll(listaTratamientos);

            } else {
                JOptionPane.showMessageDialog(null, "Cliente no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El documento no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jTDocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDocumentoKeyTyped
        char caracter = evt.getKeyChar();

        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTDocumentoKeyTyped

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        this.setVisible(false);
        panel.removeAll();
        PanelFondo panelFondo = new PanelFondo();
        panelFondo.setBounds(0, 0, 880, 750);
        panelFondo.setVisible(true);
        panel.add(panelFondo);
        panelFondo.revalidate();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSeleccionarActionPerformed
        mascota = null;
        if (jCMascota.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una mascota", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            mascota = (Mascota) jCMascota.getSelectedItem();
            if (mascota == null) {
                jTNombreMascota.setText("");
                jTColorMascota.setText("");
                jTEspecieMascota.setText("");
                jTFechaNacMascota.setText("");
                jTPesoMascota.setText("");
                jTRasaMascota.setText("");
                jTSexoMascota.setText("");
            } else {
                System.out.println(mascota.toString());
                jTNombreMascota.setText(mascota.getAlias());
                jTColorMascota.setText(mascota.getColorPelo());
                jTEspecieMascota.setText(mascota.getEspecie());
                jTFechaNacMascota.setText(mascota.getFechaNacimiento() + "");
                jTPesoMascota.setText(mascota.getPesoActual() + "");
                jTRasaMascota.setText(mascota.getRaza());
                jTSexoMascota.setText(mascota.getSexo());
                listaTratamientos.removeAll(listaTratamientos);

            }

        }
    }//GEN-LAST:event_jBSeleccionarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        jTNombreMascota.setText("");
        jTColorMascota.setText("");
        jTEspecieMascota.setText("");
        jTFechaNacMascota.setText("");
        jTPesoMascota.setText("");
        jTRasaMascota.setText("");
        jTSexoMascota.setText("");
        jTNombre.setText("");
        jTApellido.setText("");
        jTDomicilio.setText("");
        jTTelefono.setText("");
        jTContactoAlternativo.setText("");
        jTDocumento.setText("");
        jCMascota.removeAllItems();
        jTPesoPromedioMascota.setText("");
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBCargaTratamientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCargaTratamientosActionPerformed
        if (jComboTratamiento.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "debe seleccionar un tratamiento");
        } else {
            jBborrarTratamientoTabla.setEnabled(true);
            jBcargarPrecio.setEnabled(true);
            jBlimpiarTabla.setEnabled(true);
            Tratamiento tratamiento = new Tratamiento();
            tratamiento = (Tratamiento) jComboTratamiento.getSelectedItem();
            cargarTabla(tratamiento);
            listaTratamientos.add(tratamiento);
        }
    }//GEN-LAST:event_jBCargaTratamientosActionPerformed

    private void jBborrarTratamientoTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBborrarTratamientoTablaActionPerformed
        int contador = 0;
        Tratamiento tratamiento = new Tratamiento();
        if (jTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "debe seleccionar un tratamiento");
        } else {
            int filaSeleccionada = jTable.getSelectedRow();
            tratamiento.setDescripcion((String) jTable.getValueAt(filaSeleccionada, 1));
            System.out.println(tratamiento.getDescripcion());

            Iterator<Tratamiento> iterator = listaTratamientos.iterator();
            while (iterator.hasNext()) {
                Tratamiento Trata = iterator.next();
                if (Trata.getDescripcion().equals(tratamiento.getDescripcion()) && contador < 1) {
                    contador++;
                    iterator.remove(); // Elimina el elemento actual
                    System.out.println("fue borrado: " + Trata.getDescripcion());
                }

            }
            for (Tratamiento listaTratamiento : listaTratamientos) {
                System.out.println(listaTratamiento.getDescripcion());
            }

            if (filaSeleccionada != -1) {

                modelo.removeRow(filaSeleccionada);

            } else {
                JOptionPane.showMessageDialog(this, "Por favor, seleccione un tratamiento para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBborrarTratamientoTablaActionPerformed

    private void jBlimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlimpiarTablaActionPerformed
        modelo.setRowCount(0);
        listaTratamientos.removeAll(listaTratamientos);
    }//GEN-LAST:event_jBlimpiarTablaActionPerformed

    private void jTCargarpesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCargarpesoKeyTyped
        char caracter = evt.getKeyChar();

        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTCargarpesoKeyTyped

    private void jBcargarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcargarPrecioActionPerformed
        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "no ahi tratamiento en la tabla");
        } else {
            double valorTratamiento = 0;

            int columna = 2;

            ArrayList<Double> valoresColumna = new ArrayList<>();

            for (int fila = 0; fila < modelo.getRowCount(); fila++) {
                double valor = (Double) modelo.getValueAt(fila, columna);
                valoresColumna.add(valor);
            }
            for (Double object : valoresColumna) {
                valorTratamiento = valorTratamiento + object;
            }
            jTValorTratamiento.setText(valorTratamiento + "");
        }
    }//GEN-LAST:event_jBcargarPrecioActionPerformed

    private void jCFormaPAgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCFormaPAgoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCFormaPAgoActionPerformed

    private void jBlimpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlimpiarTodoActionPerformed
        jTNombreMascota.setText("");
        jTColorMascota.setText("");
        jTEspecieMascota.setText("");
        jTFechaNacMascota.setText("");
        jTPesoMascota.setText("");
        jTRasaMascota.setText("");
        jTSexoMascota.setText("");
        jTNombre.setText("");
        jTApellido.setText("");
        jTDomicilio.setText("");
        jTTelefono.setText("");
        jTContactoAlternativo.setText("");
        jTDocumento.setText("");
        jCMascota.removeAllItems();
        modelo.setRowCount(0);
        jDFechaVisita.setDate(null);
        jTDetalle.setText("");
        jTValorVisita.setText("0");
        jTValorTratamiento.setText("0");
        jTCostoTotal.setText("");
        jCFormaPAgo.setSelectedIndex(0);
        jTCargarpeso.setText("");
        jTPesoPromedioMascota.setText("");
    }//GEN-LAST:event_jBlimpiarTodoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        double importe = 0;
        if (jTValorVisita.getText().equals("0") && jTValorTratamiento.getText().equals("0")) {
            JOptionPane.showMessageDialog(this, "debe ingresar valores");
        } else {
            importe = Double.parseDouble(jTValorTratamiento.getText()) + Double.parseDouble(jTValorVisita.getText());
            jTCostoTotal.setText(importe + "");

        }

    }//GEN-LAST:event_jButton2ActionPerformed
//
    private void jBFacturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFacturarActionPerformed
        if (jTValorVisita.getText().equals("0") && jTValorTratamiento.getText().equals("0") && jTCostoTotal.getText().isEmpty()
                || jTDocumento.getText().isEmpty() || jTDetalle.getText().isEmpty() || jCMascota.getSelectedItem() == null || jTCargarpeso.getText().isEmpty() || jDFechaVisita.getDate() == null
                || jTCostoTotal.getText().isEmpty() || jCFormaPAgo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "debe completar todos los campos");
        } else {
            int idvisita = 0;
            int idMascota = mascota.getIdMascota();
            String detalle = jTDetalle.getText();
            Date fecha = jDFechaVisita.getDate();
            String formaPago = (String) jCFormaPAgo.getSelectedItem();
            double precioVisita = Double.parseDouble(jTValorVisita.getText());
            double peso = Double.parseDouble(jTCargarpeso.getText());
            double pesoPromedio = Double.parseDouble(jTPesoPromedioMascota.getText());
            double precioTratamiento = Double.parseDouble(jTValorTratamiento.getText());
            double PrecioTotal = Double.parseDouble(jTCostoTotal.getText());
            Visita visita = new Visita(pesoPromedio, detalle, fecha, precioVisita, precioTratamiento, PrecioTotal, formaPago, peso);
            idvisita = VisitaData.cargarVisita(visita, idMascota);
            System.out.println("el id es: " + idvisita);
            JOptionPane.showMessageDialog(this, "se cargo correctamente la visita");
            int i = 0;

            while (i < jTable.getRowCount()) {

                Integer trata = (Integer) jTable.getValueAt(i, 3);
//                System.out.println(trata);
                String tipo = (String) jTable.getValueAt(i, 0);
//                System.out.println(tipo);
                String descripcion = (String) jTable.getValueAt(i, 1);
//                System.out.println(descripcion);

//                tratamiento.setIdTratamiento(trata);
                Consulta consulta = new Consulta(PrecioTotal, fecha, tipo, descripcion, mascota.getIdMascota(), trata, idvisita);
                ConsultaData.crearConsulta(consulta);
                i++;
            }
        }

//            int i = 0;
//            Tratamiento tratamiento = new Tratamiento();
//            while (i < jTable.getRowCount()) {
//Object trata = jTable.getValueAt(i, 0);
//
//
// tratamiento = (Tratamiento) trata;
//
//                i++;
//
//                Consulta consulta = new Consulta(PrecioTotal, fecha, tratamiento.getTipo(), tratamiento.getDescripcion(), mascota.getIdMascota(), tratamiento.getIdTratamiento(), idvisita);
//            }
//        }

    }//GEN-LAST:event_jBFacturarActionPerformed

    private void jBpesoActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpesoActualActionPerformed
        if (jTCargarpeso.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "debe ingresar el peso actual");
        } else {
            double[] pesoPromedio = new double[10];
            int idmascota = mascota.getIdMascota();
            pesoPromedio = VisitaData.consultaPeso(idmascota);
            double pesoActual = Double.parseDouble(jTCargarpeso.getText());
            int longitud = 1;
            double suma = 0;
            double promedio = 0;
            for (int i = 0; i < 10; i++) {
                if (pesoPromedio[i] > 0) {
                    suma = suma + pesoPromedio[i];
                    longitud++;
                }

            }
            if (suma == 0) {
                double pesoMascota = Double.parseDouble(jTPesoMascota.getText());
                jTPesoPromedioMascota.setText(pesoMascota + "");
                jTCargarpeso.setText(pesoMascota + "");
                JOptionPane.showMessageDialog(this, "es la primera visita de la mascota");
            } else {
                suma = suma + pesoActual;
                System.out.println("valor de suma: " + suma);
                System.out.println("valor de longitud: " + longitud);

                promedio = suma / longitud;
                System.out.println("valor de promedio: " + promedio);
                jTPesoPromedioMascota.setText(promedio + "");
                VisitaData.modificarPesoMascota(mascota, pesoActual);
            }
        }
    }//GEN-LAST:event_jBpesoActualActionPerformed

    private void jTValorVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTValorVisitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTValorVisitaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCargaTratamientos;
    private javax.swing.JButton jBFacturar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jBSeleccionar;
    private javax.swing.JButton jBborrarTratamientoTabla;
    private javax.swing.JButton jBcargarPrecio;
    private javax.swing.JButton jBlimpiarTabla;
    private javax.swing.JButton jBlimpiarTodo;
    private javax.swing.JButton jBpesoActual;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCFormaPAgo;
    private javax.swing.JComboBox<Mascota> jCMascota;
    private javax.swing.JComboBox<Tratamiento> jComboTratamiento;
    private com.toedter.calendar.JDateChooser jDFechaVisita;
    private javax.swing.JLabel jLEspecie;
    private javax.swing.JLabel jLRaza;
    private javax.swing.JLabel jLSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLnombre;
    private javax.swing.JPanel jPInternoMascota;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTCargarpeso;
    private javax.swing.JTextField jTColorMascota;
    private javax.swing.JTextField jTContactoAlternativo;
    private javax.swing.JTextField jTCostoTotal;
    private javax.swing.JTextArea jTDetalle;
    private javax.swing.JTextField jTDocumento;
    private javax.swing.JTextField jTDomicilio;
    private javax.swing.JTextField jTEspecieMascota;
    private javax.swing.JTextField jTFechaNacMascota;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTextField jTNombreMascota;
    private javax.swing.JTextField jTPesoMascota;
    private javax.swing.JTextField jTPesoPromedioMascota;
    private javax.swing.JTextField jTRasaMascota;
    private javax.swing.JTextField jTSexoMascota;
    private javax.swing.JTextField jTTelefono;
    private javax.swing.JTextField jTValorTratamiento;
    private javax.swing.JTextField jTValorVisita;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
private void cargarcombo(ArrayList<Mascota> mascotas) {

        jCMascota.addItem(null);
        for (Mascota mascota1 : mascotas) {
            jCMascota.addItem(mascota1);
        }
    }

    private void cargacombotratamiento() {
        ArrayList<Tratamiento> tratamientos = new ArrayList<>();
        tratamientos = TratamientoData.listarTratamiento();
        jComboTratamiento.addItem(null);
        for (Tratamiento tratamiento : tratamientos) {
            jComboTratamiento.addItem(tratamiento);
        }

    }

    private void armarCabecera() {
        modelo.addColumn("Tipo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("costo");
        modelo.addColumn("Id Tratamiento");
        jTable.setModel(modelo);

    }

    private void cargarTabla(Tratamiento tratamiento) {
        modelo.addRow(new Object[]{
            tratamiento.getTipo(),
            tratamiento.getDescripcion(),
            tratamiento.getPrecio(),
            tratamiento.getIdTratamiento()
        });
    }

    private void cargacomboFormaPago() {

        jCFormaPAgo.addItem(null);
        jCFormaPAgo.addItem("efectivo");
        jCFormaPAgo.addItem("debito");
        jCFormaPAgo.addItem("Mastercar");
        jCFormaPAgo.addItem("Visa");
        jCFormaPAgo.addItem("UALA");
        jCFormaPAgo.addItem("MP");
        jCFormaPAgo.addItem("Transferencia");

    }
//public void datosMascota(){
//this.mascota=panelCliente.mostrarMascotaEnOtroPanel(panelCliente);
//    if (mascota.getAlias().isEmpty()) {
//        
//    }else{
//    jLnombre2.setText(mascota.getAlias());
//jLSexo.setText(mascota.getSexo());
//jLcolorPelo2.setText(mascota.getColorPelo());
//jLpeso2.setText(mascota.getPesoActual()+"");
//jLfechaNac2.setText(mascota.getFechaNacimiento()+"");
//jLraza2.setText(mascota.getRaza());
//jLespecie2.setText(mascota.getEspecie());
//
//    
//    }
//
//}
}
